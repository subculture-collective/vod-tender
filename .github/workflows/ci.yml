name: ci

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    backend:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Install system deps (sqlite3 for cgo)
              run: sudo apt-get update && sudo apt-get install -y libsqlite3-dev

            - name: Setup Go
              uses: actions/setup-go@v5
              with:
                  go-version: '1.23.x'
                  cache: true
                  cache-dependency-path: backend/go.sum

            - name: Go env
              run: |
                  go version
                  go env

            - name: Build
              working-directory: backend
              run: go build ./...

            - name: Test
              working-directory: backend
              run: go test ./... -v

            - name: Test with race detector (PR only)
              if: github.event_name == 'pull_request'
              working-directory: backend
              run: go test ./... -race

            - name: Vet
              working-directory: backend
              run: go vet ./...

            - name: govulncheck
              working-directory: backend
              run: |
                  go install golang.org/x/vuln/cmd/govulncheck@latest
                  $(go env GOPATH)/bin/govulncheck ./...

            - name: Lint
              uses: golangci/golangci-lint-action@v6
              with:
                  version: latest
                  working-directory: backend

            - name: Docker build
              run: docker build -t vod-tender .

    frontend:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '20'
                  cache: 'pnpm'
                  cache-dependency-path: frontend/pnpm-lock.yaml

            - name: Install dependencies
              working-directory: frontend
              run: pnpm install

            - name: Build
              working-directory: frontend
              run: npm run build

            - name: Lint
              working-directory: frontend
              run: npm run lint
